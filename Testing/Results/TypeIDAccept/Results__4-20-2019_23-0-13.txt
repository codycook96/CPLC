[TEST]	TypeIDAccept
[PASS]	93.5484%
[ERR]	0%
[INFO]
Checking that parent data type ID's accept child type ID's

[REPORT]
+=====================================+
Type TYPE_ANY should accept type TYPE_ANY: passed
Type TYPE_ANY should accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY should accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY should accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY should accept type TYPE_ANY_NUM: passed
Type TYPE_ANY should accept type TYPE_ANY_INT: passed
Type TYPE_ANY should accept type TYPE_SINT: passed
Type TYPE_ANY should accept type TYPE_INT: passed
Type TYPE_ANY should accept type TYPE_DINT: passed
Type TYPE_ANY should accept type TYPE_LINT: passed
Type TYPE_ANY should accept type TYPE_USINT: passed
Type TYPE_ANY should accept type TYPE_UINT: passed
Type TYPE_ANY should accept type TYPE_UDINT: passed
Type TYPE_ANY should accept type TYPE_ULINT: passed
Type TYPE_ANY should accept type TYPE_ANY_REAL: passed
Type TYPE_ANY should accept type TYPE_REAL: passed
Type TYPE_ANY should accept type TYPE_LREAL: passed
Type TYPE_ANY should accept type TYPE_TIME: passed
Type TYPE_ANY should accept type TYPE_ANY_BIT: passed
Type TYPE_ANY should accept type TYPE_BOOL: passed
Type TYPE_ANY should accept type TYPE_BYTE: passed
Type TYPE_ANY should accept type TYPE_WORD: passed
Type TYPE_ANY should accept type TYPE_DWORD: passed
Type TYPE_ANY should accept type TYPE_LWORD: passed
Type TYPE_ANY should accept type TYPE_ANY_STRING: passed
Type TYPE_ANY should accept type TYPE_STRING: passed
Type TYPE_ANY should accept type TYPE_WSTRING: passed
Type TYPE_ANY should accept type TYPE_ANY_DATE: passed
Type TYPE_ANY should accept type TYPE_DATE: passed
Type TYPE_ANY should accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY should accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_DERIVED should accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_SINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_INT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_DINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_LINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_USINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_UINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_UDINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ULINT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_REAL: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_LREAL: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_DERIVED shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_ELEMENTARY shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_ELEMENTARY shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_INT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_SINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_INT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_DINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_LINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_USINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_UINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_UDINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ULINT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_REAL: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_LREAL: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_TIME: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_BOOL: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_BYTE: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_WORD: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_DWORD: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_LWORD: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_STRING: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_WSTRING: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_DATE: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_ELEMENTARY should accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_ANY_INT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_SINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_INT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_DINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_LINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_USINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_UINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_UDINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_ULINT: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_REAL: passed
Type TYPE_ANY_MAGNITUDE should accept type TYPE_LREAL: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_TIME: failed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_MAGNITUDE shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_NUM should accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_NUM should accept type TYPE_ANY_INT: passed
Type TYPE_ANY_NUM should accept type TYPE_SINT: passed
Type TYPE_ANY_NUM should accept type TYPE_INT: passed
Type TYPE_ANY_NUM should accept type TYPE_DINT: passed
Type TYPE_ANY_NUM should accept type TYPE_LINT: passed
Type TYPE_ANY_NUM should accept type TYPE_USINT: passed
Type TYPE_ANY_NUM should accept type TYPE_UINT: passed
Type TYPE_ANY_NUM should accept type TYPE_UDINT: passed
Type TYPE_ANY_NUM should accept type TYPE_ULINT: passed
Type TYPE_ANY_NUM should accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_NUM should accept type TYPE_REAL: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_LREAL: failed
Type TYPE_ANY_NUM shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_NUM shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_INT should accept type TYPE_ANY_INT: passed
Type TYPE_ANY_INT should accept type TYPE_SINT: passed
Type TYPE_ANY_INT should accept type TYPE_INT: passed
Type TYPE_ANY_INT should accept type TYPE_DINT: passed
Type TYPE_ANY_INT should accept type TYPE_LINT: passed
Type TYPE_ANY_INT should accept type TYPE_USINT: passed
Type TYPE_ANY_INT should accept type TYPE_UINT: passed
Type TYPE_ANY_INT should accept type TYPE_UDINT: passed
Type TYPE_ANY_INT should accept type TYPE_ULINT: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_REAL: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_LREAL: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_INT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_SINT shouldn't accept type TYPE_ANY: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_SINT should accept type TYPE_SINT: passed
Type TYPE_SINT shouldn't accept type TYPE_INT: passed
Type TYPE_SINT shouldn't accept type TYPE_DINT: passed
Type TYPE_SINT shouldn't accept type TYPE_LINT: passed
Type TYPE_SINT shouldn't accept type TYPE_USINT: passed
Type TYPE_SINT shouldn't accept type TYPE_UINT: passed
Type TYPE_SINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_SINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_SINT shouldn't accept type TYPE_REAL: passed
Type TYPE_SINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_SINT shouldn't accept type TYPE_TIME: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_SINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_SINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_SINT shouldn't accept type TYPE_WORD: passed
Type TYPE_SINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_SINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_SINT shouldn't accept type TYPE_STRING: passed
Type TYPE_SINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_SINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_SINT shouldn't accept type TYPE_DATE: passed
Type TYPE_SINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_SINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_INT shouldn't accept type TYPE_ANY: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_INT shouldn't accept type TYPE_SINT: passed
Type TYPE_INT should accept type TYPE_INT: passed
Type TYPE_INT shouldn't accept type TYPE_DINT: passed
Type TYPE_INT shouldn't accept type TYPE_LINT: passed
Type TYPE_INT shouldn't accept type TYPE_USINT: passed
Type TYPE_INT shouldn't accept type TYPE_UINT: passed
Type TYPE_INT shouldn't accept type TYPE_UDINT: passed
Type TYPE_INT shouldn't accept type TYPE_ULINT: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_INT shouldn't accept type TYPE_REAL: passed
Type TYPE_INT shouldn't accept type TYPE_LREAL: passed
Type TYPE_INT shouldn't accept type TYPE_TIME: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_INT shouldn't accept type TYPE_BOOL: passed
Type TYPE_INT shouldn't accept type TYPE_BYTE: passed
Type TYPE_INT shouldn't accept type TYPE_WORD: passed
Type TYPE_INT shouldn't accept type TYPE_DWORD: passed
Type TYPE_INT shouldn't accept type TYPE_LWORD: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_INT shouldn't accept type TYPE_STRING: passed
Type TYPE_INT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_INT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_INT shouldn't accept type TYPE_DATE: passed
Type TYPE_INT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_INT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_DINT shouldn't accept type TYPE_ANY: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_DINT shouldn't accept type TYPE_SINT: passed
Type TYPE_DINT shouldn't accept type TYPE_INT: passed
Type TYPE_DINT should accept type TYPE_DINT: passed
Type TYPE_DINT shouldn't accept type TYPE_LINT: passed
Type TYPE_DINT shouldn't accept type TYPE_USINT: passed
Type TYPE_DINT shouldn't accept type TYPE_UINT: passed
Type TYPE_DINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_DINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_DINT shouldn't accept type TYPE_REAL: passed
Type TYPE_DINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_DINT shouldn't accept type TYPE_TIME: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_DINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_DINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_DINT shouldn't accept type TYPE_WORD: passed
Type TYPE_DINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_DINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_DINT shouldn't accept type TYPE_STRING: passed
Type TYPE_DINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_DINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_DINT shouldn't accept type TYPE_DATE: passed
Type TYPE_DINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_DINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_LINT shouldn't accept type TYPE_ANY: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_LINT shouldn't accept type TYPE_SINT: passed
Type TYPE_LINT shouldn't accept type TYPE_INT: passed
Type TYPE_LINT shouldn't accept type TYPE_DINT: passed
Type TYPE_LINT should accept type TYPE_LINT: passed
Type TYPE_LINT shouldn't accept type TYPE_USINT: passed
Type TYPE_LINT shouldn't accept type TYPE_UINT: passed
Type TYPE_LINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_LINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_LINT shouldn't accept type TYPE_REAL: passed
Type TYPE_LINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_LINT shouldn't accept type TYPE_TIME: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_LINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_LINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_LINT shouldn't accept type TYPE_WORD: passed
Type TYPE_LINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_LINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_LINT shouldn't accept type TYPE_STRING: passed
Type TYPE_LINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_LINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_LINT shouldn't accept type TYPE_DATE: passed
Type TYPE_LINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_LINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_USINT shouldn't accept type TYPE_ANY: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_USINT shouldn't accept type TYPE_SINT: passed
Type TYPE_USINT shouldn't accept type TYPE_INT: passed
Type TYPE_USINT shouldn't accept type TYPE_DINT: passed
Type TYPE_USINT shouldn't accept type TYPE_LINT: passed
Type TYPE_USINT should accept type TYPE_USINT: passed
Type TYPE_USINT shouldn't accept type TYPE_UINT: passed
Type TYPE_USINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_USINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_USINT shouldn't accept type TYPE_REAL: passed
Type TYPE_USINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_USINT shouldn't accept type TYPE_TIME: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_USINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_USINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_USINT shouldn't accept type TYPE_WORD: passed
Type TYPE_USINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_USINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_USINT shouldn't accept type TYPE_STRING: passed
Type TYPE_USINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_USINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_USINT shouldn't accept type TYPE_DATE: passed
Type TYPE_USINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_USINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_UINT shouldn't accept type TYPE_ANY: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_UINT shouldn't accept type TYPE_SINT: passed
Type TYPE_UINT shouldn't accept type TYPE_INT: passed
Type TYPE_UINT shouldn't accept type TYPE_DINT: passed
Type TYPE_UINT shouldn't accept type TYPE_LINT: passed
Type TYPE_UINT shouldn't accept type TYPE_USINT: passed
Type TYPE_UINT should accept type TYPE_UINT: passed
Type TYPE_UINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_UINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_UINT shouldn't accept type TYPE_REAL: passed
Type TYPE_UINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_UINT shouldn't accept type TYPE_TIME: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_UINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_UINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_UINT shouldn't accept type TYPE_WORD: passed
Type TYPE_UINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_UINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_UINT shouldn't accept type TYPE_STRING: passed
Type TYPE_UINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_UINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_UINT shouldn't accept type TYPE_DATE: passed
Type TYPE_UINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_UINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_UDINT shouldn't accept type TYPE_ANY: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_UDINT shouldn't accept type TYPE_SINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_INT: passed
Type TYPE_UDINT shouldn't accept type TYPE_DINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_LINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_USINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_UINT: passed
Type TYPE_UDINT should accept type TYPE_UDINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_ULINT: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_UDINT shouldn't accept type TYPE_REAL: passed
Type TYPE_UDINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_UDINT shouldn't accept type TYPE_TIME: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_UDINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_UDINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_UDINT shouldn't accept type TYPE_WORD: passed
Type TYPE_UDINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_UDINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_UDINT shouldn't accept type TYPE_STRING: passed
Type TYPE_UDINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_UDINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_UDINT shouldn't accept type TYPE_DATE: passed
Type TYPE_UDINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_UDINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ULINT shouldn't accept type TYPE_ANY: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ULINT shouldn't accept type TYPE_SINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_INT: passed
Type TYPE_ULINT shouldn't accept type TYPE_DINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_LINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_USINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_UINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_UDINT: passed
Type TYPE_ULINT should accept type TYPE_ULINT: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ULINT shouldn't accept type TYPE_REAL: passed
Type TYPE_ULINT shouldn't accept type TYPE_LREAL: passed
Type TYPE_ULINT shouldn't accept type TYPE_TIME: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ULINT shouldn't accept type TYPE_BOOL: passed
Type TYPE_ULINT shouldn't accept type TYPE_BYTE: passed
Type TYPE_ULINT shouldn't accept type TYPE_WORD: passed
Type TYPE_ULINT shouldn't accept type TYPE_DWORD: passed
Type TYPE_ULINT shouldn't accept type TYPE_LWORD: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ULINT shouldn't accept type TYPE_STRING: passed
Type TYPE_ULINT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ULINT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ULINT shouldn't accept type TYPE_DATE: passed
Type TYPE_ULINT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ULINT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_SINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_INT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_DINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_LINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_USINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_UINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_UDINT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ULINT: passed
Type TYPE_ANY_REAL should accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_REAL should accept type TYPE_REAL: passed
Type TYPE_ANY_REAL should accept type TYPE_LREAL: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_REAL shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_REAL shouldn't accept type TYPE_ANY: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_REAL shouldn't accept type TYPE_SINT: passed
Type TYPE_REAL shouldn't accept type TYPE_INT: passed
Type TYPE_REAL shouldn't accept type TYPE_DINT: passed
Type TYPE_REAL shouldn't accept type TYPE_LINT: passed
Type TYPE_REAL shouldn't accept type TYPE_USINT: passed
Type TYPE_REAL shouldn't accept type TYPE_UINT: passed
Type TYPE_REAL shouldn't accept type TYPE_UDINT: passed
Type TYPE_REAL shouldn't accept type TYPE_ULINT: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_REAL should accept type TYPE_REAL: passed
Type TYPE_REAL shouldn't accept type TYPE_LREAL: passed
Type TYPE_REAL shouldn't accept type TYPE_TIME: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_REAL shouldn't accept type TYPE_BOOL: passed
Type TYPE_REAL shouldn't accept type TYPE_BYTE: passed
Type TYPE_REAL shouldn't accept type TYPE_WORD: passed
Type TYPE_REAL shouldn't accept type TYPE_DWORD: passed
Type TYPE_REAL shouldn't accept type TYPE_LWORD: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_REAL shouldn't accept type TYPE_STRING: passed
Type TYPE_REAL shouldn't accept type TYPE_WSTRING: passed
Type TYPE_REAL shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_REAL shouldn't accept type TYPE_DATE: passed
Type TYPE_REAL shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_REAL shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_LREAL shouldn't accept type TYPE_ANY: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_LREAL shouldn't accept type TYPE_SINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_INT: passed
Type TYPE_LREAL shouldn't accept type TYPE_DINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_LINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_USINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_UINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_UDINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_ULINT: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_LREAL shouldn't accept type TYPE_REAL: passed
Type TYPE_LREAL should accept type TYPE_LREAL: passed
Type TYPE_LREAL shouldn't accept type TYPE_TIME: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_LREAL shouldn't accept type TYPE_BOOL: passed
Type TYPE_LREAL shouldn't accept type TYPE_BYTE: passed
Type TYPE_LREAL shouldn't accept type TYPE_WORD: passed
Type TYPE_LREAL shouldn't accept type TYPE_DWORD: passed
Type TYPE_LREAL shouldn't accept type TYPE_LWORD: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_LREAL shouldn't accept type TYPE_STRING: passed
Type TYPE_LREAL shouldn't accept type TYPE_WSTRING: passed
Type TYPE_LREAL shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_LREAL shouldn't accept type TYPE_DATE: passed
Type TYPE_LREAL shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_LREAL shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_TIME shouldn't accept type TYPE_ANY: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_TIME shouldn't accept type TYPE_SINT: passed
Type TYPE_TIME shouldn't accept type TYPE_INT: passed
Type TYPE_TIME shouldn't accept type TYPE_DINT: passed
Type TYPE_TIME shouldn't accept type TYPE_LINT: passed
Type TYPE_TIME shouldn't accept type TYPE_USINT: passed
Type TYPE_TIME shouldn't accept type TYPE_UINT: passed
Type TYPE_TIME shouldn't accept type TYPE_UDINT: passed
Type TYPE_TIME shouldn't accept type TYPE_ULINT: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_TIME shouldn't accept type TYPE_REAL: passed
Type TYPE_TIME shouldn't accept type TYPE_LREAL: passed
Type TYPE_TIME should accept type TYPE_TIME: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_TIME shouldn't accept type TYPE_BOOL: passed
Type TYPE_TIME shouldn't accept type TYPE_BYTE: passed
Type TYPE_TIME shouldn't accept type TYPE_WORD: passed
Type TYPE_TIME shouldn't accept type TYPE_DWORD: passed
Type TYPE_TIME shouldn't accept type TYPE_LWORD: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_TIME shouldn't accept type TYPE_STRING: passed
Type TYPE_TIME shouldn't accept type TYPE_WSTRING: passed
Type TYPE_TIME shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_TIME shouldn't accept type TYPE_DATE: passed
Type TYPE_TIME shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_TIME shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_SINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_INT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_DINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_LINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_USINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_UINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_UDINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ULINT: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_REAL: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_LREAL: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_BIT should accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_BIT should accept type TYPE_BOOL: passed
Type TYPE_ANY_BIT should accept type TYPE_BYTE: passed
Type TYPE_ANY_BIT should accept type TYPE_WORD: passed
Type TYPE_ANY_BIT should accept type TYPE_DWORD: passed
Type TYPE_ANY_BIT should accept type TYPE_LWORD: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_BIT shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_BOOL shouldn't accept type TYPE_ANY: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_BOOL shouldn't accept type TYPE_SINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_INT: passed
Type TYPE_BOOL shouldn't accept type TYPE_DINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_LINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_USINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_UINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_UDINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_ULINT: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_BOOL shouldn't accept type TYPE_REAL: passed
Type TYPE_BOOL shouldn't accept type TYPE_LREAL: passed
Type TYPE_BOOL shouldn't accept type TYPE_TIME: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_BOOL should accept type TYPE_BOOL: passed
Type TYPE_BOOL shouldn't accept type TYPE_BYTE: passed
Type TYPE_BOOL shouldn't accept type TYPE_WORD: passed
Type TYPE_BOOL shouldn't accept type TYPE_DWORD: passed
Type TYPE_BOOL shouldn't accept type TYPE_LWORD: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_BOOL shouldn't accept type TYPE_STRING: passed
Type TYPE_BOOL shouldn't accept type TYPE_WSTRING: passed
Type TYPE_BOOL shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_BOOL shouldn't accept type TYPE_DATE: passed
Type TYPE_BOOL shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_BOOL shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_BYTE shouldn't accept type TYPE_ANY: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_BYTE shouldn't accept type TYPE_SINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_INT: passed
Type TYPE_BYTE shouldn't accept type TYPE_DINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_LINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_USINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_UINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_UDINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_ULINT: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_BYTE shouldn't accept type TYPE_REAL: passed
Type TYPE_BYTE shouldn't accept type TYPE_LREAL: passed
Type TYPE_BYTE shouldn't accept type TYPE_TIME: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_BYTE shouldn't accept type TYPE_BOOL: passed
Type TYPE_BYTE should accept type TYPE_BYTE: passed
Type TYPE_BYTE shouldn't accept type TYPE_WORD: passed
Type TYPE_BYTE shouldn't accept type TYPE_DWORD: passed
Type TYPE_BYTE shouldn't accept type TYPE_LWORD: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_BYTE shouldn't accept type TYPE_STRING: passed
Type TYPE_BYTE shouldn't accept type TYPE_WSTRING: passed
Type TYPE_BYTE shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_BYTE shouldn't accept type TYPE_DATE: passed
Type TYPE_BYTE shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_BYTE shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_WORD shouldn't accept type TYPE_ANY: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_WORD shouldn't accept type TYPE_SINT: passed
Type TYPE_WORD shouldn't accept type TYPE_INT: passed
Type TYPE_WORD shouldn't accept type TYPE_DINT: passed
Type TYPE_WORD shouldn't accept type TYPE_LINT: passed
Type TYPE_WORD shouldn't accept type TYPE_USINT: passed
Type TYPE_WORD shouldn't accept type TYPE_UINT: passed
Type TYPE_WORD shouldn't accept type TYPE_UDINT: passed
Type TYPE_WORD shouldn't accept type TYPE_ULINT: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_WORD shouldn't accept type TYPE_REAL: passed
Type TYPE_WORD shouldn't accept type TYPE_LREAL: passed
Type TYPE_WORD shouldn't accept type TYPE_TIME: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_WORD shouldn't accept type TYPE_BOOL: passed
Type TYPE_WORD shouldn't accept type TYPE_BYTE: passed
Type TYPE_WORD should accept type TYPE_WORD: passed
Type TYPE_WORD shouldn't accept type TYPE_DWORD: passed
Type TYPE_WORD shouldn't accept type TYPE_LWORD: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_WORD shouldn't accept type TYPE_STRING: passed
Type TYPE_WORD shouldn't accept type TYPE_WSTRING: passed
Type TYPE_WORD shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_WORD shouldn't accept type TYPE_DATE: passed
Type TYPE_WORD shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_WORD shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_DWORD shouldn't accept type TYPE_ANY: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_DWORD shouldn't accept type TYPE_SINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_INT: passed
Type TYPE_DWORD shouldn't accept type TYPE_DINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_LINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_USINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_UINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_UDINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_ULINT: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_DWORD shouldn't accept type TYPE_REAL: passed
Type TYPE_DWORD shouldn't accept type TYPE_LREAL: passed
Type TYPE_DWORD shouldn't accept type TYPE_TIME: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_DWORD shouldn't accept type TYPE_BOOL: passed
Type TYPE_DWORD shouldn't accept type TYPE_BYTE: passed
Type TYPE_DWORD shouldn't accept type TYPE_WORD: passed
Type TYPE_DWORD should accept type TYPE_DWORD: passed
Type TYPE_DWORD shouldn't accept type TYPE_LWORD: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_DWORD shouldn't accept type TYPE_STRING: passed
Type TYPE_DWORD shouldn't accept type TYPE_WSTRING: passed
Type TYPE_DWORD shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_DWORD shouldn't accept type TYPE_DATE: passed
Type TYPE_DWORD shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_DWORD shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_LWORD shouldn't accept type TYPE_ANY: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_LWORD shouldn't accept type TYPE_SINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_INT: passed
Type TYPE_LWORD shouldn't accept type TYPE_DINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_LINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_USINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_UINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_UDINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_ULINT: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_LWORD shouldn't accept type TYPE_REAL: passed
Type TYPE_LWORD shouldn't accept type TYPE_LREAL: passed
Type TYPE_LWORD shouldn't accept type TYPE_TIME: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_LWORD shouldn't accept type TYPE_BOOL: passed
Type TYPE_LWORD shouldn't accept type TYPE_BYTE: passed
Type TYPE_LWORD shouldn't accept type TYPE_WORD: passed
Type TYPE_LWORD shouldn't accept type TYPE_DWORD: passed
Type TYPE_LWORD should accept type TYPE_LWORD: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_LWORD shouldn't accept type TYPE_STRING: passed
Type TYPE_LWORD shouldn't accept type TYPE_WSTRING: passed
Type TYPE_LWORD shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_LWORD shouldn't accept type TYPE_DATE: passed
Type TYPE_LWORD shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_LWORD shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_SINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_INT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_DINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_LINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_USINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_UINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_UDINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ULINT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_REAL: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_LREAL: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_STRING should accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_STRING should accept type TYPE_STRING: passed
Type TYPE_ANY_STRING should accept type TYPE_WSTRING: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_DATE: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_STRING shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_STRING shouldn't accept type TYPE_ANY: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_STRING shouldn't accept type TYPE_SINT: passed
Type TYPE_STRING shouldn't accept type TYPE_INT: passed
Type TYPE_STRING shouldn't accept type TYPE_DINT: passed
Type TYPE_STRING shouldn't accept type TYPE_LINT: passed
Type TYPE_STRING shouldn't accept type TYPE_USINT: passed
Type TYPE_STRING shouldn't accept type TYPE_UINT: passed
Type TYPE_STRING shouldn't accept type TYPE_UDINT: passed
Type TYPE_STRING shouldn't accept type TYPE_ULINT: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_STRING shouldn't accept type TYPE_REAL: passed
Type TYPE_STRING shouldn't accept type TYPE_LREAL: passed
Type TYPE_STRING shouldn't accept type TYPE_TIME: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_STRING shouldn't accept type TYPE_BOOL: passed
Type TYPE_STRING shouldn't accept type TYPE_BYTE: passed
Type TYPE_STRING shouldn't accept type TYPE_WORD: passed
Type TYPE_STRING shouldn't accept type TYPE_DWORD: passed
Type TYPE_STRING shouldn't accept type TYPE_LWORD: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_STRING should accept type TYPE_STRING: passed
Type TYPE_STRING shouldn't accept type TYPE_WSTRING: passed
Type TYPE_STRING shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_STRING shouldn't accept type TYPE_DATE: passed
Type TYPE_STRING shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_STRING shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_WSTRING shouldn't accept type TYPE_ANY: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_SINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_INT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_DINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_LINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_USINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_UINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_UDINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ULINT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_WSTRING shouldn't accept type TYPE_REAL: passed
Type TYPE_WSTRING shouldn't accept type TYPE_LREAL: passed
Type TYPE_WSTRING shouldn't accept type TYPE_TIME: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_WSTRING shouldn't accept type TYPE_BOOL: passed
Type TYPE_WSTRING shouldn't accept type TYPE_BYTE: passed
Type TYPE_WSTRING shouldn't accept type TYPE_WORD: passed
Type TYPE_WSTRING shouldn't accept type TYPE_DWORD: passed
Type TYPE_WSTRING shouldn't accept type TYPE_LWORD: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_WSTRING shouldn't accept type TYPE_STRING: passed
Type TYPE_WSTRING should accept type TYPE_WSTRING: passed
Type TYPE_WSTRING shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_WSTRING shouldn't accept type TYPE_DATE: passed
Type TYPE_WSTRING shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_WSTRING shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_SINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_INT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_DINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_LINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_USINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_UINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_UDINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ULINT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_REAL: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_LREAL: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_TIME: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_BOOL: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_BYTE: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_WORD: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_DWORD: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_LWORD: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_STRING: passed
Type TYPE_ANY_DATE shouldn't accept type TYPE_WSTRING: passed
Type TYPE_ANY_DATE should accept type TYPE_ANY_DATE: passed
Type TYPE_ANY_DATE should accept type TYPE_DATE: passed
Type TYPE_ANY_DATE should accept type TYPE_DATE_AND_TIME: passed
Type TYPE_ANY_DATE should accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_DATE shouldn't accept type TYPE_ANY: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_DATE shouldn't accept type TYPE_SINT: passed
Type TYPE_DATE shouldn't accept type TYPE_INT: passed
Type TYPE_DATE shouldn't accept type TYPE_DINT: passed
Type TYPE_DATE shouldn't accept type TYPE_LINT: passed
Type TYPE_DATE shouldn't accept type TYPE_USINT: passed
Type TYPE_DATE shouldn't accept type TYPE_UINT: passed
Type TYPE_DATE shouldn't accept type TYPE_UDINT: passed
Type TYPE_DATE shouldn't accept type TYPE_ULINT: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_DATE shouldn't accept type TYPE_REAL: passed
Type TYPE_DATE shouldn't accept type TYPE_LREAL: passed
Type TYPE_DATE shouldn't accept type TYPE_TIME: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_DATE shouldn't accept type TYPE_BOOL: passed
Type TYPE_DATE shouldn't accept type TYPE_BYTE: passed
Type TYPE_DATE shouldn't accept type TYPE_WORD: passed
Type TYPE_DATE shouldn't accept type TYPE_DWORD: passed
Type TYPE_DATE shouldn't accept type TYPE_LWORD: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_DATE shouldn't accept type TYPE_STRING: passed
Type TYPE_DATE shouldn't accept type TYPE_WSTRING: passed
Type TYPE_DATE shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_DATE should accept type TYPE_DATE: passed
Type TYPE_DATE shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_DATE shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_SINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_INT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_DINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_LINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_USINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_UINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_UDINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ULINT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_REAL: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_LREAL: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_TIME: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_BOOL: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_BYTE: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_WORD: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_DWORD: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_LWORD: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_STRING: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_WSTRING: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_DATE: passed
Type TYPE_DATE_AND_TIME should accept type TYPE_DATE_AND_TIME: passed
Type TYPE_DATE_AND_TIME shouldn't accept type TYPE_TIME_OF_DAY: passed
+=====================================+
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_DERIVED: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_ELEMENTARY: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_MAGNITUDE: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_NUM: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_INT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_SINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_INT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_DINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_LINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_USINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_UINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_UDINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ULINT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_REAL: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_REAL: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_LREAL: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_TIME: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_BIT: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_BOOL: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_BYTE: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_WORD: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_DWORD: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_LWORD: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_STRING: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_STRING: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_WSTRING: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_ANY_DATE: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_DATE: passed
Type TYPE_TIME_OF_DAY shouldn't accept type TYPE_DATE_AND_TIME: passed
Type TYPE_TIME_OF_DAY should accept type TYPE_TIME_OF_DAY: passed

